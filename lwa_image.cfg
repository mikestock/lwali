########################################################################
# The imager reads the raw data, and creates dirty images.  These are 
# saved in a LARGE binary file
[Imager]
###
# The basic input and output paths. 
# timeseriespath :   "/data/NOAA/Data/LWA/Flash01/lwa_timeseries_00318553177754323680.hdf5"
timeseriespath :   "/localdata/mstock/LWA/Flash03/lwa_timeseries_00319248378565310880.hdf5"
# the output path will be overwritten, and is large (1-100 GB)
dirtypath      :   "/localdata/mstock/LWA/Flash03/dirty_00319248378565310880_stroke.hdf5"

###
# The Speed of Light is mostly a constant 
# This value is for a vacuum, works well at high elevation angles
#speedoflight:   299792458
# this is 97% the speed of light, which seems to correct elevation near the horizon
# (But, I've never prooved to myself that all is right with Physics doing 
# this correction)
speedoflight:   290798684
###
# Sample rate of the digitizer
samplerate  :   204800000
# Band pass band.  Uses a simple tophat filter
bandwidth   :   [[43000000, 62000000],[68000000,87000000]]
###
# Start and Stop Samples
# define what portion of the raw data gets processed
#Default Values
# startsample :  0
# stopsample  : -1
# imagecenter :   (0,  0) 

# startsample :    2791000
# startsample :    2750000
# stopsample  :    5000000
# stopsample  :    3791000    #setting to -1 will image the whole file, but the renderer will break
# stopsample : -1
###
#interesting part #1
# startsample : 34251000
# stopsample  : 36381000
startsample :  9580000
stopsample  : 41120000
# imagecenter :   (0.34,  0.03) 
imagecenter :   (0.,  0.) 
###
# Integration Time, in samples.  
inttime		:	200
###
# Step Time
#the step time is the how many samples are between integration periods
#steptime < inttime means overlapping windows
#steptime > inttime means not all data is images (there are gaps)
#this is about 50% overlap (2 Mfps), and a good choice for high quality 
#processing
steptime	:	100
#this processes a lot faster, at lower quality 
# steptime	:	200
###
# Interpolation
# This upsamples the raw data before imaging.  High values give more 
# exct output, but take longer to process.  2 works in basically all cases.
interpolation:  2
###
# imagesize is the number of pixels in the image.  
# Warning: Computation time scales with imagesize^2
imagesize   :   301
###
# Image Center
# steers the beam in this direction
# reduces errors due to window edge effects
# center specified in cosine plane
# imagecenter :   (0,0)
# imagecenter :   (0.68, -0.47)

###
# bounding region for imaging, must be square
# bbox specified in cosine plane
# a good default
# bbox        :   [[-1.1,1.1],[-1.1,1.1]]
# zoomed in on the region of interest for this flash 01
# bbox        :   [ [0, 1.1],[-1.1, 0] ]
# bbox        : [ [0.0, 1.0], [-.75, 0.25]]
# bbox        :   [ [.58, .78],[-.56, -.36] ]
# zoomed in on flash03
bbox        :   [[-.9,.9],[-.9,.9]]
###
# Spectral Whitening
# Turning this on will attempt to correct for the changin frequency 
# spectra of the lightning signal.  It does this by just dividing the 
# FFT by abs(FFT), so amplitude information is lost.   
# Use this if using CLEAN techniques in the renderer
whiten      :   False 
###
# minimum baseline length
# exclude baselines which are too short, since they really just produce a blobby mess
# this can significantly speed up processing
minbaseline     : 10 

########################################################################
# The Render has settings for lofar_renderer which actually makes the 
# png images, and does the cleaning
[Renderer]
###
# Figure parameters
figsize         : [6,4]
figdpi          : 200
# The render bbox does not have to be square, or the same as the one used for imaging
# if the render box extends outside the imaging box though, there could be artifacts
# set bbox to None to use image setting
bbox            : [[-1,1],[-.9,.44]]
###
# over-ride the start and stop locations, set to 0 and -1 to render everything
startrender     : 0
stoprender      : -1
###
# Deconvolution technique
# Currently supports: None, max, clean
deconvolution   :   'max'
###
# cleaning parameters, only used when deconvolution=clean
cleaningIterations : 500
cleaningFactor     : 0.05
###
# Frame Integration
# This many images from the imager are added together to create 1 frame
frameintegration:   100
###
# Video Integration
# If True, video output will show integrated luminocity instead of just 
# the current frame
videointegration:   True
###
# Display
# If True, the output will be displayed to the screen
display         :   True
###
# mostly debugging stuff
#ask for user input between frames
stepwise        : False
#show time as sample number
sampletime      : True
###
# Save Output
# if True, output png files will be written to ./frames/frame_XXXXXX.png
saveoutput      :   True
outputdir       :   '/localdata/mstock/LWA/Flash03/frames/'
###
# vmax
# sets the maximum amplitude for the color scale.  This is on a log scale 
vmax            :   17
vmin            :   5
###
# highlight sources in the current frame
sparkle         : True
sparklemax      : 14
sparklepersist  : 0.33
sparklecmap     : 'cool'
########################################################################
# Information about the array
# the name of the station must be the same as that in the hdf5 file
# all the location information for the antennas is included in the data file, but we do have to do some selection here
[Antennas]
#antennas stands listed here will be included with the iamger
# stands          : [1, 210, 242, 28, 116, 14]
stands          : [1, 210, 242, 28, 116, 14, 255, 113, 211, 4, 240, 77, 74, 249, 24, 160, 162, 6, 250, 202, 29, 25, 214, 76, 78, 254, 2, 158, 245, 18, 73, 163, 209]
# stands          : 'all'   #this will break things, don't do it
#cross-polarization isn't supported yet, but you can at least choose which polarization you want to work with
#0 - X,  1 - Y
polarity        : 0 #TODO I spelled polarization wrong

